{"ast":null,"code":"var _jsxFileName = \"/Users/krystal/Documents/wordle/src/components/GameOver.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { AppContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GameOver() {\n  _s();\n\n  const {\n    board,\n    setBoard,\n    currAttempt,\n    gameOver,\n    onSelectLetter,\n    correctWord,\n    onDelete\n  } = useContext(AppContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameOver\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: gameOver.guessedWord ? \"You Correctly Guessed the Wordle\" : \"If you got the Wordle Correct you're thee ONE, If you got it wrong go and read a book or something smh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Correct Word: \", correctWord]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), gameOver.guessedWord && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"You guessed in \", currAttempt.attempt, \" attempts\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GameOver, \"VwzVn649tyIPn7ZZ7VXurL18GhE=\");\n\n_c = GameOver;\nexport default GameOver;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameOver\");","map":{"version":3,"sources":["/Users/krystal/Documents/wordle/src/components/GameOver.js"],"names":["React","useContext","AppContext","GameOver","board","setBoard","currAttempt","gameOver","onSelectLetter","correctWord","onDelete","guessedWord","attempt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,QAA3B;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,cALI;AAMJC,IAAAA,WANI;AAOJC,IAAAA;AAPI,MAQFT,UAAU,CAACC,UAAD,CARd;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAA,gBACGK,QAAQ,CAACI,WAAT,GACG,kCADH,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,mCAAmBF,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EASGF,QAAQ,CAACI,WAAT,iBACC;AAAA,oCAAoBL,WAAW,CAACM,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAzBQT,Q;;KAAAA,Q;AA2BT,eAAeA,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { AppContext } from \"../App\";\n\nfunction GameOver() {\n  const {\n    board,\n    setBoard,\n    currAttempt,\n    gameOver,\n    onSelectLetter,\n    correctWord,\n    onDelete,\n  } = useContext(AppContext);\n  return (\n    <div className=\"gameOver\">\n      <h3>\n        {gameOver.guessedWord\n          ? \"You Correctly Guessed the Wordle\"\n          : \"If you got the Wordle Correct you're thee ONE, If you got it wrong go and read a book or something smh\"\n          \n        }\n      </h3>\n      <h1>Correct Word: {correctWord}</h1>\n      {gameOver.guessedWord && (\n        <h3>You guessed in {currAttempt.attempt} attempts</h3>\n      )}\n    </div>\n  );\n}\n\nexport default GameOver;"]},"metadata":{},"sourceType":"module"}